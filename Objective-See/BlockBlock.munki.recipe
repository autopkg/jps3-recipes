<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>Description</key>
    <string>Downloads the latest version of BlockBlock persistent OS component install monitor and imports into Munki.</string>
	<key>Identifier</key>
	<string>com.github.jps3.munki.BlockBlock</string>
	<key>Input</key>
	<dict>
		<key>repo_subdirectory</key>
		<string>apps/Objective-See</string>
		<key>pkginfo</key>
		<dict>
			<key>catalogs</key>
			<array>
				<string>testing</string>
			</array>
            <key>description</key>
            <string>https://objective-see.com/products/blockblock.html

Me: "please alert me anytime, anything is persistently installed" 
BlockBlock: "you got it"
Malware installs itself persistently, to ensure it's automatically re-executed at reboot. BlockBlock continually monitors common persistence locations and displays an alert whenever a persistent component is added to the OS.

BlockBlock is currently still a beta product. This version isn't as fully tested as Objective-See's other software, and thus may contain bugs. If you find any issues while using this beta, please send an email to bugs@objective-see.com and I'll try fix them ASAP!
            </string>
			<key>display_name</key>
			<string>%NAME%</string>
			<key>name</key>
            <string>%NAME%</string>
   			<key>developer</key>
			<string>Objective-See</string>
			<key>category</key>
			<string>Security</string>
            <key>preuninstall_script</key>
            <string>#!/bin/bash
PATH=/bin:/usr/bin:/sbin
# Per instructions at https://objetive-see.com/products/blockblock.html
# We add some conditionals around the `launchctl`, `rm` and other commands
# because the presence of the BlockBlock_Install.app does not guarantee
# the app was actually installed.

# uninstall kext
kextunload -b com.objectiveSee.kext.BlockBlock
if [[ -e /Library/Extensions/BlockBlock.kext ]]; then
    rm -rf /Library/Extensions/BlockBlock.kext
fi

# uninstall launch daemon
if [[ -e /Library/LaunchDaemons/com.objectiveSee.blockblock.plist ]]; then
    launchctl unload /Library/LaunchDaemons/com.objectiveSee.blockblock.plist
    rm -rf /Library/LaunchDaemons/com.objectiveSee.blockblock.plist
fi

# uninstall launch agent
# TODO: How should this be handled via Munki on (possibily multiusuer)
#       machine?
#launchctl unload ~/Library/LaunchAgents/com.objectiveSee.blockblock.plist
#rm -rf ~/Library/LaunchAgents/com.objectiveSee.blockblock.plist

# remove application's support directory (log file, etc)
# TODO: How should this be handled via Munki on (possibily multiusuer)
#       machine?
#rm -rf ~/Library/Application Support/com.objectiveSee.BlockBlock

# remove binary &amp; make all running tasks are killed
rm -rf /Applications/BlockBlock.app /Applications/BlockBlock_Installer.app
killall BlockBlock

exit 0
            </string>
		</dict>
	</dict>
	<key>MinimumVersion</key>
	<string>0.4.0</string>
	<key>ParentRecipe</key>
	<string>com.github.jps3.download.BlockBlock</string>
	<key>Process</key>
    <array>
		<dict>
			<key>Processor</key>
			<string>Versioner</string>
			<key>Arguments</key>
			<dict>
				<key>input_plist_path</key>
				<string>%found_filename%/Contents/Info.plist</string>
			</dict>
		</dict>
		<dict>
			<key>Processor</key>
			<string>DmgCreator</string>
			<key>Arguments</key>
			<dict>
				<key>dmg_root</key>
				<string>%RECIPE_CACHE_DIR%/%NAME%</string>
				<key>dmg_path</key>
				<string>%RECIPE_CACHE_DIR%/%NAME%-%version%.dmg</string>
			</dict>
		</dict>
		<dict>
			<key>Processor</key>
			<string>MunkiImporter</string>
            <key>Arguments</key>
            <dict>
				<key>pkg_path</key>
				<string>%RECIPE_CACHE_DIR%/%NAME%-%version%.dmg</string>
            </dict>
		</dict>
	</array>
</dict>
</plist>
