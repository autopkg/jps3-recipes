<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>Description</key>
    <string>Downloads the latest version of Objective-Seeâ€™s Ostiarius with VirusTotal integration.</string>
	<key>Identifier</key>
	<string>com.github.jps3.munki.Ostiarius</string>
	<key>Input</key>
	<dict>
		<key>repo_subdirectory</key>
		<string>apps/Objective-See</string>
		<key>pkginfo</key>
		<dict>
			<key>catalogs</key>
			<array>
				<string>testing</string>
			</array>
            <key>description</key>
            <string>https://objective-see.com/products/ostiarius.html
"
Ostiarius is tool for El Capitan that blocks unsigned internet binaries from executing. Though OS X's Gatekeeper attempts provide this functionality, it's trivial to bypass. The bypass was detailed at ShmooCon 2016 in 'Gatekeeper Exposed'. Ostiarius utilizes undocumented aspects of the OS to provide global protection. Though carefully designed to not break any legitimate functionality, it has not been tested on all possible systems &amp; scenarios. As such, run at your own risk ;)

And, if you find any issues while using this tool, please send an email to bugs@objective-see.com and I'll try fix them ASAP! 
"

            </string>
			<key>display_name</key>
			<string>%NAME%</string>
			<key>name</key>
            <string>%NAME%</string>
			<key>developer</key>
			<string>Objective-See</string>
			<key>category</key>
			<string>Security</string>
            <key>preuninstall_script</key>
            <string>#!/bin/bash
PATH=/sbin:/bin
kextunload -b com.objective-see.OstiariusKext
rm -rf /Library/Extensions/Ostiarius.kext
            </string>
		</dict>
	</dict>
	<key>MinimumVersion</key>
	<string>0.4.0</string>
	<key>ParentRecipe</key>
	<string>com.github.jps3.download.Ostiarius</string>
	<key>Process</key>
	<array>
		<dict>
			<key>Processor</key>
			<string>Versioner</string>
			<key>Arguments</key>
			<dict>
				<key>input_plist_path</key>
				<string>%RECIPE_CACHE_DIR%/%NAME%/%NAME%.app/Contents/Info.plist</string>
			</dict>
		</dict>
		<dict>
			<key>Processor</key>
			<string>DmgCreator</string>
			<key>Arguments</key>
			<dict>
				<key>dmg_root</key>
				<string>%RECIPE_CACHE_DIR%/%NAME%</string>
				<key>dmg_path</key>
				<string>%RECIPE_CACHE_DIR%/%NAME%-%version%.dmg</string>
			</dict>
		</dict>
		<dict>
			<key>Processor</key>
			<string>MunkiImporter</string>
            <key>Arguments</key>
            <dict>
				<key>pkg_path</key>
				<string>%RECIPE_CACHE_DIR%/%NAME%-%version%.dmg</string>
            </dict>
		</dict>
	</array>
</dict>
</plist>
