<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>Description</key>
	<string>Downloads the latest version of SketchUp Pro for RELEASE_YEAR (ex. 2017) by looking for the first match on the download page. 

You can specify LOCALE (default: en) for alternative languages. At last check locales were: en, de, es, fr, it, ja, ko.

Note: It sppears that every major release is done annually and requires and updated license. You will want to keep that in mind if you are automating your deployments without testing!
</string>
	<key>Identifier</key>
	<string>com.github.jps3.download.SketchUpPro</string>
	<key>Input</key>
	<dict>
		<key>LOCALE</key>
		<string>en</string>
		<key>NAME</key>
		<string>SketchUpPro</string>
		<key>RELEASE_YEAR</key>
		<string>2017</string>
		<key>SU_FOLDER</key>
		<string>SketchUp %RELEASE_YEAR%</string>
		<key>SUP_DOWNLOAD_PAGE_URL</key>
		<string>https://www.sketchup.com/download/all</string>
		<!--
			2016-02-05T12:25:58-0500
			Download page is available via HTTPS.
			However, all downloads ultimately delivered via HTTP only.
		-->
	</dict>
	<key>MinimumVersion</key>
	<string>1.0.3</string>
	<key>Process</key>
	<array>
		<dict>
			<key>Processor</key>
			<string>URLTextSearcher</string>
			<key>Arguments</key>
			<dict>
				<key>url</key>
				<string>%SUP_DOWNLOAD_PAGE_URL%</string>
				<key>result_output_var_name</key>
				<string>url</string>
				<key>re_pattern</key>
				<string>(?&lt;=&quot;)((?:https?:)?//.+/sketchup/%RELEASE_YEAR%/.+-en.dmg)(?=&quot;)</string>
				<!-- Ex. http://dl.trimble.com/sketchup/2017/en/sketchuppro-2017-3-116-90851-en.dmg -->
				<key>re_flags</key>
				<array>
					<string>IGNORECASE</string>
				</array>
			</dict>
		</dict>
		<dict>
			<key>Processor</key>
			<string>URLDownloader</string>
		</dict>
		<dict>
			<key>Processor</key>
			<string>EndOfCheckPhase</string>
		</dict>
		<dict>
			<key>Processor</key>
			<string>CodeSignatureVerifier</string>
			<key>Arguments</key>
			<dict>
				<key>input_path</key>
				<string>%pathname%/%SU_FOLDER%/LayOut.app</string>
				<key>requirement</key>
				<string>anchor apple generic and (certificate leaf[field.1.2.840.113635.100.6.1.9] /* exists */ or certificate 1[field.1.2.840.113635.100.6.2.6] /* exists */ and certificate leaf[field.1.2.840.113635.100.6.1.13] /* exists */ and certificate leaf[subject.OU] = J8PVMCY7KL)</string>
			</dict>
		</dict>
		<dict>
			<key>Processor</key>
			<string>CodeSignatureVerifier</string>
			<key>Arguments</key>
			<dict>
				<key>input_path</key>
				<string>%pathname%/%SU_FOLDER%/SketchUp.app</string>
				<key>requirement</key>
				<string>anchor apple generic and (certificate leaf[field.1.2.840.113635.100.6.1.9] /* exists */ or certificate 1[field.1.2.840.113635.100.6.2.6] /* exists */ and certificate leaf[field.1.2.840.113635.100.6.1.13] /* exists */ and certificate leaf[subject.OU] = J8PVMCY7KL)</string>
			</dict>
		</dict>
		<dict>
			<key>Processor</key>
			<string>CodeSignatureVerifier</string>
			<key>Arguments</key>
			<dict>
				<key>input_path</key>
				<string>%pathname%/%SU_FOLDER%/Style Builder.app</string>
				<key>requirement</key>
				<string>anchor apple generic and (certificate leaf[field.1.2.840.113635.100.6.1.9] /* exists */ or certificate 1[field.1.2.840.113635.100.6.2.6] /* exists */ and certificate leaf[field.1.2.840.113635.100.6.1.13] /* exists */ and certificate leaf[subject.OU] = J8PVMCY7KL)</string>
			</dict>
		</dict>
	</array>
</dict>
</plist>
